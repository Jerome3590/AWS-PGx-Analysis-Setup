#!/bin/bash
set -eux
rver=4.3.2
rspkg=rstudio-server-rhel-2023.12.0-369-x86_64.rpm
rspasswd=Trick90**ZX#
USER="pgx3874"
TARGET_DIR="/home/pgx-repo/"
adduser $USER
mkdir -p $TARGET_DIR
chmod -R 777 $TARGET_DIR
aws s3 sync s3://pgx-repository/ade-risk-model/ /home/pgx-repo/ade-risk-model
chown -R $USER:$USER $TARGET_DIR
sh -c "echo '$rspasswd' | passwd pgx3874 --stdin"
usermod -aG wheel $USER
yum update -y
yum install -y bzip2-devel cairo-devel \
     gcc gcc-c++ gcc-gfortran libXt-devel cmake \
     libcurl-devel libjpeg-devel libpng-devel \
     pango-devel pango libicu-devel wget git \
     libtiff-devel pcre2-devel readline-devel jq \
     texinfo texlive-collection-fontsrecommended \
	   xz-devel awscli libxml2-devel
amazon-linux-extras install -y epel
yum install -y https://apache.jfrog.io/artifactory/arrow/amazon-linux/2/apache-arrow-release-latest.rpm
yum install -y --enablerepo=epel arrow-devel 
yum install -y --enablerepo=epel arrow-glib-devel 
yum install -y --enablerepo=epel arrow-dataset-devel 
yum install -y --enablerepo=epel arrow-dataset-glib-devel 
yum install -y --enablerepo=epel parquet-devel 
yum install -y --enablerepo=epel parquet-glib-devel 
yum install -y --enablerepo=epel udunits2-devel
amazon-linux-extras enable corretto8
yum install -y java-1.8.0-amazon-corretto-devel
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-amazon-corretto/
mkdir /tmp/R-build
cd /tmp/R-build
curl -OL https://cran.r-project.org/src/base/R-4/R-$rver.tar.gz
tar -xzf R-$rver.tar.gz
cd R-$rver
./configure --with-readline=yes --enable-R-profiling=no --enable-memory-profiling=no --enable-R-shlib --with-pic --prefix=/usr/local --with-x --with-libpng --with-jpeglib --with-cairo --enable-R-shlib --with-recommended-packages=yes
make -j 8
make install
cat << 'EOF' > /tmp/Renvextra
JAVA_HOME="/usr/lib/jvm/java-1.8.0-amazon-corretto/"
GITHUB_PAT="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"
PATH="${PWD}:/usr/local/bin:${PATH}"
EOF
cat /tmp/Renvextra |  tee -a /usr/local/lib64/R/etc/Renviron
/usr/local/bin/R CMD javareconf
curl -OL https://download2.rstudio.org/server/centos7/x86_64/$rspkg
mkdir -p /etc/rstudio
sh -c "echo 'auth-minimum-user-id=100' >> /etc/rstudio/rserver.conf"
yum install -y $rspkg
rstudio-server start
/usr/local/bin/R --no-save <<R_SCRIPT
Sys.setenv(TZ='Etc/UCT')
install.packages(c('reticulate','rmarkdown','caret','purrr','dplyr','tidyr','here'), repos="http://cran.rstudio.com")
install.packages('remotes', repos="http://cran.rstudio.com")
remotes::install_url('https://github.com/catboost/catboost/releases/download/v1.2.7/catboost-R-linux-aarch64-1.2.7.tgz', INSTALL_opts = c("--no-multiarch", "--no-test-load"))
R_SCRIPT
cd /usr/local/src
curl https://sh.rustup.rs -sSf | sh
sudo wget https://www.openssl.org/source/openssl-1.1.1q.tar.gz
sudo tar xzf openssl-1.1.1q.tar.gz
cd openssl-1.1.1q
sudo ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl shared zlib
sudo make
sudo make install
echo "/usr/local/openssl/lib" | sudo tee -a /etc/ld.so.conf.d/openssl-1.1.1q.conf
sudo ldconfig
export PATH=/usr/local/openssl/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/openssl/lib
export CPPFLAGS="-I/usr/local/openssl/include"
export LDFLAGS="-L/usr/local/openssl/lib"
sudo yum -y install sqlite-devel gdbm-devel libdb-devel libffi-devel bzip2-devel xz-devel ncurses-devel readline-devel tk-devel
wget https://www.python.org/ftp/python/3.12.7/Python-3.12.7.tgz
tar xzf Python-3.12.7.tgz
cd Python-3.12.7
./configure --with-openssl=/usr/local/openssl --enable-optimizations --prefix=/usr/local --enable-shared
make
sudo make altinstall
export PATH="/usr/local/bin:$PATH"
echo '/usr/local/lib' |  tee /etc/ld.so.conf.d/python3.12.conf
ldconfig
PYTHON="$(which python3.12)"
$PYTHON -m pip install --upgrade pip
$PYTHON -m pip install boto3 ec2-metadata pyarrow pandas scikit-learn dtaidistance tslearn catboost matplotlib shap
yum install -y amazon-cloudwatch-agent
chmod 777 /opt/aws/amazon-cloudwatch-agent/bin/
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
INSTANCE_TYPE=$(curl -s http://169.254.169.254/latest/meta-data/instance-type)
cat <<EOF > /opt/aws/amazon-cloudwatch-agent/bin/config.json
{
    "agent": {
        "metrics_collection_interval": 60,
        "run_as_user": "cwagent"
    },
    "metrics": {
        "append_dimensions": {
            "InstanceId": "$INSTANCE_ID",
            "InstanceType": "$INSTANCE_TYPE"
        },
        "metrics_collected": {
            "cpu": {
                "measurement": [
                    "cpu_usage_idle",
                    "cpu_usage_iowait",
                    "cpu_usage_user",
                    "cpu_usage_system",
                    "cpu_usage_steal",
                    "cpu_usage_nice",
                    "cpu_usage_guest",
                    "cpu_usage_guest_nice",
                    "cpu_usage_irq",
                    "cpu_usage_softirq"
                ],
                "metrics_collection_interval": 60,
                "totalcpu": true
            },
            "disk": {
                "measurement": [
                    "used_percent",
                    "inodes_free"
                ],
                "metrics_collection_interval": 60,
                "resources": [
                    "/"
                ]
            },
            "diskio": {
                "measurement": [
                    "io_time",
                    "write_bytes",
                    "read_bytes",
                    "writes",
                    "reads"
                ],
                "metrics_collection_interval": 60,
                "resources": [
                    "/"
                ]
            },
            "mem": {
                "measurement": [
                    "mem_used_percent"
                ],
                "metrics_collection_interval": 60
            },
            "swap": {
                "measurement": [
                    "swap_used_percent"
                ],
                "metrics_collection_interval": 60
            }
        }
    }
}
EOF
/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json -s
id cwagent || useradd cwagent
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
SENDER="jerome.dixon@mushinsolutions.awsapps.com"
RECIPIENT="dixonrj@vcu.edu"
SUBJECT="Bootstrap Completed on EC2 Instance: $INSTANCE_ID"
AWS_REGION="us-east-1"
BODY_TEXT="RStudio Server is successfully running on instance: $INSTANCE_ID."
if systemctl is-active --quiet rstudio-server
then aws ses send-email \
        --from "$SENDER" \
        --destination "ToAddresses=$RECIPIENT" \
        --message "Subject={Data=$SUBJECT},Body={Text={Data=$BODY_TEXT}}" \
        --region "$AWS_REGION"
fi
